# Model API Keys
OPENAI_API_KEY=""
OPENROUTER_API_BASE="https://openrouter.ai/api/v1"
OPENROUTER_API_KEY=""
VLLM_API_BASE="http://localhost:8000"
VLLM_API_KEY= "None"

# Integrations OAUTH
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""
GITHUB_CLIENT_ID=""
GITHUB_CLIENT_SECRET=""
GITHUB_TOKEN=""

# Ray
RAY_RUNNER_HEAD="http://localhost:1000"
RAY_ADDRESS="auto" # Ray cluster address; 'auto' to auto-detect
RAY_RUNTIME_ENV_WORKING_DIR=null # Path to working directory
RAY_RUNTIME_ENV_PIP=null # List of pip packages or path to requirements.txt
RAY_NUM_CPUS=null # Number of CPUs available to Ray
RAY_NUM_GPUS=null # Number of GPUs available to Ray
RAY_OBJECT_STORE_MEMORY=null # Object store memory size
RAY_LOCAL_MODE=false # Run Ray in local mode
RAY_USAGE_STATS_ENABLED=false # Enable usage stats
RAY_DASHBOARD_HOST="127.0.0.1" # Host for the dashboard
RAY_DASHBOARD_PORT=8265 # Port for the dashboard
RAY_LOGGING_LEVEL="info" # Logging level (debug, info, warning, error)

# LanceDB
LANCEDB_BASE_URL=""

# Unity Catalog
UNITY_CATALOG_URL= "http://localhost:2000"
UNITY_CATALOG_TOKEN=""
UNITYCATALOG_LOG="debug"

# MLFlow
# Tracking and Registry
MLFLOW_TRACKING_URI=""
MLFLOW_TRACKING_SERVER="localhost:4000"
MLFLOW_REGISTRY_URI=""

# MLFlow AI Deployments Server
#MLFLOW_DEPLOYMENTS_CONFIG=""
#MLFLOW_DEPLOYMENTS_SERVER="http://localhost:5000"

# S3 Configuration
MLFLOW_S3_ENDPOINT_URL=""
MLFLOW_S3_IGNORE_TLS=""

# Artifact Management
MLFLOW_ARTIFACT_UPLOAD_DOWNLOAD_TIMEOUT=""

# GCS Configuration
MLFLOW_GCS_DEFAULT_TIMEOUT=""
MLFLOW_GCS_UPLOAD_CHUNK_SIZE=""
MLFLOW_GCS_DOWNLOAD_CHUNK_SIZE=""

# Authentication
MLFLOW_TRACKING_USERNAME=""
MLFLOW_TRACKING_TOKEN=""
#MLFLOW_UC_OSS_TOKEN=""

# Security Settings
MLFLOW_TRACKING_INSECURE_TLS=true
#MLFLOW_TRACKING_SERVER_CERT_PATH="" # Cannot be set if insecure_tls is true
#MLFLOW_TRACKING_CLIENT_CERT_PATH=""

# # For S3 and GCS, MLFlow supports multipart upload
# MLFLOW_ENABLE_PROXY_MULTIPART_UPLOAD=false
# MLFLOW_MULTIPART_UPLOAD_MINIMUM_FILE_SIZE=500MB
# MLFLOW_MULTIPART_UPLOAD_CHUNK_SIZE=100MB



# Triton
TRITON_URL="http://localhost:5000"
TRITON_MODEL_REPO=""

# Redis
REDIS_HOST="localhost"
REDIS_PORT="6379"
REDIS_PASSWORD=""

# Local Compute/Storage Variables
LOCAL_STORAGE_PATH=""
LOCAL_SERVER_ADDRESS="localhost:5000"

# # AWS Core Credentials and Configuration
# AWS_ACCESS_KEY_ID=""
# AWS_SECRET_ACCESS_KEY=""
# AWS_SESSION_TOKEN=""
# AWS_REGION=""
# AWS_ENDPOINT_URL=""
# AWS_PROFILE=""
# 
# # AWS S3 Specific Configuration
# AWS_S3_ADDRESSING_STYLE=""
# AWS_S3_SSE=""
# AWS_S3_SSE_KMS_KEY_ID=""
# AWS_S3_EXPRESS=""
# 
# # AWS Security and SSL Configuration
# AWS_USE_SSL=""
# AWS_VERIFY_SSL=""
# 
# # AWS Request and Connection Configuration
# AWS_REQUESTER_PAYS=""
# AWS_FORCE_VIRTUAL_ADDRESSING=""
# AWS_SSE_BUCKET_KEY_ENABLED=""
#
# # Other Vars
# AWS_CA_BUNDLE=""

# # GCP
# GOOGLE_PROJECT_ID=""
# GOOGLE_APPLICATION_CREDENTIALS="./service_account_key.json"
# GOOGLE_TOKEN=""

# # Azure Core Credentials and Configuration
# AZURE_STORAGE_ACCOUNT=""
# AZURE_STORAGE_SAS_TOKEN=""
# AZURE_TENANT_ID=""
# AZURE_CLIENT_ID=""
# AZURE_CLIENT_SECRET=""
# 
# # Azure Additional Configuration
# AZURE_STORAGE_TOKEN=""
# AZURE_STORAGE_USE_EMULATOR=""
# AZURE_STORAGE_ENDPOINT=""
# AZURE_USE_FABRIC_ENDPOINT=""
#
# AZURE_STORAGE_CONNECTION_STRING=""
#
# You can construct the connection string using other environment variables:
# AZURE_STORAGE_CONNECTION_STRING="DefaultEndpointsProtocol=https;AccountName=${AZURE_STORAGE_ACCOUNT};AccountKey=${AZURE_STORAGE_ACCESS_KEY};EndpointSuffix=core.windows.net"
#
# If using SAS token instead of access key:
# AZURE_STORAGE_CONNECTION_STRING="BlobEndpoint=https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/;QueueEndpoint=https://${AZURE_STORAGE_ACCOUNT}.queue.core.windows.net/;FileEndpoint=https://${AZURE_STORAGE_ACCOUNT}.file.core.windows.net/;TableEndpoint=https://${AZURE_STORAGE_ACCOUNT}.table.core.windows.net/;SharedAccessSignature=${AZURE_STORAGE_SAS_TOKEN}"
# AZURE_STORAGE_ACCESS_KEY=""









